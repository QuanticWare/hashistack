- name: "Nomad SystemD tuning | Uncomment Wants and After for Consul"
  ansible.builtin.replace:
    path: /lib/systemd/system/nomad.service
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
  - { regexp: "#Wants=consul.service", replace: "Wants=consul.service"}
  - { regexp: "#After=consul.service", replace: "After=consul.service"}

- name: "Nomad SystemD tuning | Fix reload systemctl command"
  ansible.builtin.replace:
    path: /lib/systemd/system/nomad.service
    regexp: '^ExecReload=/bin/kill -HUP \$MAINPID$'
    replace: 'ExecReload=/bin/kill --signal HUP $MAINPID'

- name: "Nomad SystemD tuning | Add vault-unseal start order"
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/nomad.service
    insertafter: 'After=consul.service'
    line: 'After=vault-unseal.service'

- name: "Nomad SystemD tuning | Add Docker start order"
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/nomad.service
    insertafter: 'After=consul.service'
    line: 'After=docker.service'
  when:
  - nomad_node_role == 'client' or nomad_node_role == 'both'
  - nomad_docker_driver == true

- name: "Nomad SystemD tuning | Playbook for Stop Nomad"
  block:
    - name: "Nomad SystemD tuning | Playbook's template"
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/root/{{ item }}"
        mode: '0644'
      loop:
      - nomad_stop.yml

    - name: "Nomad SystemD tuning | Add ExecStop instruction"
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/nomad.service
        insertafter: 'ExecStart=/usr/bin/nomad agent -config /etc/nomad.d'
        line: 'ExecStop={{ ansible_venv_on_target_dir }}/bin/ansible-playbook -i localhost, /root/nomad_stop.yml'
  when: nomad_install_mode == 'single'

- name: "Nomad SystemD tuning | Daemon reload systemd"
  ansible.builtin.systemd_service:
    daemon_reload: true
