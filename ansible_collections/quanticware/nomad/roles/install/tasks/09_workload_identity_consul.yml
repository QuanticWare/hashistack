---
- name: "Nomad | Transform to one line CA pem"
  ansible.builtin.shell: "cat {{ nomad_install_tls_host_certificate_dir }}/{{ nomad_install_tls_ca_pubkey }} | sed ':a;N;$!ba;s/\\n/\\\\n/g'"
  register: ca_certificate_output
  when: nomad_tls == true

- name: "Nomad | Template for consul-auth-method-nomad-workloads.json"
  ansible.builtin.template:
    src: "consul-auth-method-nomad-workloads.json.j2"
    dest: "/tmp/consul-auth-method-nomad-workloads.json"

- name: "Nomad | Create Auth Method"
  ansible.builtin.shell: consul acl auth-method create -name '{{ nomad_install_backend_consul_jwt_name }}' -type 'jwt' -description '{{ nomad_install_backend_consul_jwt_description }}' -config '@consul-auth-method-nomad-workloads.json'
  args:
    chdir: /tmp/
  environment:
    CONSUL_HTTP_ADDR: "{{ nomad_install_backend_consul_http_ip }}:{{ nomad_install_backend_consul_http_port }}"
    CONSUL_HTTP_SSL: "{% if nomad_tls == true %}true{% else %}false{% endif %}"
    CONSUL_HTTP_TOKEN: "{% if nomad_acl == true %}{{ consul_global_management_token }}{% endif %}"
    CONSUL_CACERT: "{% if nomad_tls == true %}{{ nomad_install_backend_consul_tls_host_certificate_dir }}/{{ nomad_install_backend_consul_tls_ca_pubkey }}{% endif %}"
    CONSUL_CLIENT_CERT: "{% if nomad_tls == true %}{{ nomad_install_backend_consul_tls_host_certificate_dir }}/{{ nomad_install_backend_consul_tls_cert_server }}{% endif %}"
    CONSUL_CLIENT_KEY: "{% if nomad_tls == true %}{{ nomad_install_backend_consul_tls_host_certificate_dir }}/{{ nomad_install_backend_consul_tls_privatekey_server }}{% endif %}"

- name: "Nomad | Remove consul-auth-method-nomad-workloads.json"
  ansible.builtin.file:
    path: "/tmp/consul-auth-method-nomad-workloads.json"
    state: absent

- name: "Nomad | Create a Consul ACL binding rule for Nomad services"
  ansible.builtin.import_role:
    name: "quanticware.consul.operate"
    tasks_from: binding_create
  vars:
    consul_binding_method: "{{ nomad_install_backend_consul_binding_nomad_services_name }}"
    consul_binding_rule_description: "{{ nomad_install_backend_consul_binding_nomad_services_description }}"
    consul_binding_name: '{{ nomad_install_backend_consul_binding_nomad_services_bind_name }}'
    consul_binding_type: "{{ nomad_install_backend_consul_binding_nomad_services_bind_type }}"
    consul_binding_selector: "{{ nomad_install_backend_consul_binding_nomad_services_bind_selector }}"

- name: "Nomad | Create a Consul ACL binding rule for Nomad tasks"
  ansible.builtin.import_role:
    name: "quanticware.consul.operate"
    tasks_from: binding_create
  vars:
    consul_binding_method: "{{ nomad_install_backend_consul_binding_nomad_tasks_name }}"
    consul_binding_rule_description: "{{ nomad_install_backend_consul_binding_nomad_tasks_description }}"
    consul_binding_name: '{{ nomad_install_backend_consul_binding_nomad_tasks_bind_name }}'
    consul_binding_type: "{{ nomad_install_backend_consul_binding_nomad_tasks_bind_type }}"
    consul_binding_selector: "{{ nomad_install_backend_consul_binding_nomad_tasks_bind_selector }}"

- name: "Nomad | Consul ACL | Create a Consul ACL policy for Nomad tasks"
  ansible.builtin.import_role:
    name: "quanticware.consul.operate"
    tasks_from: policy_create
  vars:
    consul_policy_name: "{{ nomad_install_backend_consul_policy_nomad_tasks_name }}"
    consul_token_description: "{{ nomad_install_backend_consul_policy_nomad_tasks_description }}"
    consul_policy_rules: 'key_prefix \"\" {\n  policy = \"read\"\n}\n\nservice_prefix \"\" {\n  policy = \"read\"\n}\n'

- name: "Nomad | Create a Consul ACL role for Nomad tasks"
  ansible.builtin.import_role:
    name: "quanticware.consul.operate"
    tasks_from: role_create
  vars:
    consul_role_name: "{{ nomad_install_backend_consul_role_nomad_tasks_name }}"
    consul_role_description: "{{ nomad_install_backend_consul_role_nomad_tasks_description }}"
    consul_policy_name: '{{ nomad_install_backend_consul_policy_nomad_tasks_name }}'
