
---
- name: "Nomad | Vault Policies | Create Policy for Nomad-Server"
  ansible.builtin.import_role:
    name: "quanticware.vault.operate"
    tasks_from: create_policy
  vars:
    vault_policy_name: "nomad-server"
    vault_policy_rules: 'path \"auth/token/create/nomad-cluster\" {\n  capabilities = [\"update\"]\n}\n\npath \"auth/token/roles/nomad-cluster\" {\n  capabilities = [\"read\"]\n}\n\npath \"auth/token/lookup-self\" {\n  capabilities = [\"read\"]\n}\n\npath \"auth/token/lookup\" {\n  capabilities = [\"update\"]\n}\n\npath \"auth/token/revoke-accessor\" {\n  capabilities = [\"update\"]\n}\n\npath \"sys/capabilities-self\" {\n  capabilities = [\"update\"]\n}\n\npath \"auth/token/renew-self\" {\n  capabilities = [\"update\"]\n}\n'

- name: "Nomad | Vault Policies | Create Policy for access-creds"
  ansible.builtin.import_role:
    name: "quanticware.vault.operate"
    tasks_from: create_policy
  vars:
    vault_policy_name: "access-creds"
    vault_policy_rules: 'path \"database/*\" {\n  capabilities = [\"list\", \"read\", \"create\", \"update\"]\n}\npath \"env/*\" {\n  capabilities = [\"list\", \"read\", \"create\", \"update\"]\n}\npath \"apps/*\" {\n  capabilities = [\"list\", \"read\", \"create\", \"update\"]\n}\n'

- name: "Nomad | Vault Policies | Create Roles for Nomad-Cluster"
  ansible.builtin.import_role:
    name: "quanticware.vault.operate"
    tasks_from: create_role
  vars:
    vault_role_name: "nomad-cluster"
    vault_role_rules: '{"allowed_policies":"nomad-server,access-creds","name":"nomad","orphan":"true","renewable":"true","period":"46080s","token_period":"768h","max_ttl":"768h"}'

- name: "Nomad | Vault Token | Create Vault Token for Nomad"
  ansible.builtin.import_role:
    name: "quanticware.vault.operate"
    tasks_from: create_token
  vars:
    vault_policies:
    - "nomad-server"
    - "access-creds"
  when: vault_nomad_token is undefined

- name: "Nomad | Vault Token | Check stats of local ansible fact file"
  ansible.builtin.stat:
    path: "/etc/ansible/facts.d/vault_nomad_token.fact"
  register: ansible_local_facts_vault_nomad_token_file

- name: Nomad | Vault Token | Write Nomad Vault token
  block:
    - ansible.builtin.set_fact:
        vault_nomad_token_facts: |
          {
            "vault_nomad_token": "{{ vault_new_token_result.json.auth.client_token | default(vault_nomad_token) }}"
          }

    - name: "Nomad | Vault Token | Insert Nomad Vault token facts in ansible local facts"
      ansible.builtin.copy:
        dest: /etc/ansible/facts.d/vault_nomad_token.fact
        content: "{{ vault_nomad_token_facts | to_nice_json }}"
        mode: "0600"

    - name: "Nomad | Vault Token | Insert vault_nomad_token in group {{ inventory_hostname }}"
      ansible.builtin.lineinfile:
        path: "{{ project_dir }}/env/host_vars/{{ inventory_hostname }}/hashistack.yml"
        regexp: "^vault_nomad_token: "
        line: 'vault_nomad_token: "{{ vault_new_token_result.json.auth.client_token  | default(vault_nomad_token) }}"'
        create: yes
      delegate_to: localhost
      become: no
  when: ansible_local_facts_vault_nomad_token_file.stat.exists == False

- name: Vault | Reload local facts
  ansible.builtin.setup:
    filter: ansible_local
