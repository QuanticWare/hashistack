- name: "Vault Configuration | Check init status"
  ansible.builtin.uri:
    url: "{{ vault_install_http_scheme }}://{{ vault_install_http_ip }}:{{ vault_install_http_port }}/v1/sys/init"
    ca_path: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_ca_pubkey }}"
    client_cert: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_cert }}"
    client_key: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_privatekey }}"
    method: GET
    status_code:
        - 200
        - 404
  register: vault_init_status

- name: "Vault Configuration | Init process"
  block:
    - name: Vault Configuration | Init Vault
      ansible.builtin.uri:
        url: "{{ vault_install_http_scheme }}://{{ vault_install_http_ip }}:{{ vault_install_http_port }}/v1/sys/init"
        ca_path: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_ca_pubkey }}"
        client_cert: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_cert }}"
        client_key: "{{ vault_install_tls_host_certificate_dir }}/{{ vault_install_tls_privatekey }}"
        method: POST
        body: |
            {
              "secret_shares": 5,
              "secret_threshold": 3
            }
        body_format: json
        status_code:
            - 200
      register: vault_init_result

    - ansible.builtin.debug:
        msg: "{{ vault_init_result.json.root_token }}"

    - ansible.builtin.debug:
        msg: "{{ vault_init_result.json.keys }}"

    - ansible.builtin.debug:
        msg: "{{ vault_init_result.json.keys_base64 }}"

    - ansible.builtin.set_fact:
        vault_root_token: "{{ vault_init_result.json.root_token }}"
        vault_init_facts: |
          {
            "vault_url": "{{ vault_install_http_scheme }}://{{ vault_install_http_ip }}:{{ vault_install_http_port }}",
            "vault_keys": "{{ vault_init_result.json.keys }}",
            "vault_keys_base64": {{ vault_init_result.json.keys_base64 }},
          }

    - name: "Vault Configuration | Insert Vault Configuration facts in ansible local facts"
      ansible.builtin.copy:
        dest: /etc/ansible/facts.d/vault.fact
        content: "{{ vault_init_facts | to_nice_json }}"
        mode: "0600"

    - name: "Vault Configuration | Replace specials characters in fact"
      ansible.builtin.replace:
        path: /etc/ansible/facts.d/vault.fact
        after: "vault_keys_base64"
        regexp: "'"
        replace: '"'

    - name: "Vault Configuration | Insert vault_url in group"
      ansible.builtin.lineinfile:
        path: "{{ project_dir }}/env/host_vars/{{ inventory_hostname }}/hashistack.yml"
        regexp: "^vault_url: "
        line: 'vault_url: "{{ vault_install_http_scheme }}://{{ vault_install_http_ip }}:{{ vault_install_http_port }}"'
        create: yes
      delegate_to: localhost
      become: no

    - name: "Vault Configuration | Insert vault_root_token in group"
      ansible.builtin.lineinfile:
        path: "{{ project_dir }}/env/host_vars/{{ inventory_hostname }}/hashistack.yml"
        regexp: "^vault_root_token: "
        line: 'vault_root_token: "{{ vault_init_result.json.root_token }}"'
        create: yes
      delegate_to: localhost
      become: no

    - name: "Vault Configuration | Insert vault_keys_base64 in group"
      ansible.builtin.lineinfile:
        path: "{{ project_dir }}/env/host_vars/{{ inventory_hostname }}/hashistack.yml"
        regexp: "^vault_keys: "
        line: 'vault_keys: "{{ vault_init_result.json.keys }}"'
        create: yes
      delegate_to: localhost
      become: no

    - name: "Vault Configuration | Insert vault_keys in group {{ inventory_hostname }}"
      ansible.builtin.lineinfile:
        path: "{{ project_dir }}/env/host_vars/{{ inventory_hostname }}/hashistack.yml"
        regexp: "^vault_keys_base64: "
        line: 'vault_keys_base64: {{ vault_init_result.json.keys_base64 }}'
        create: yes
      delegate_to: localhost
      become: no
  when: vault_init_status.json.initialized == false

- name: "Vault Configuration | Check stats of local ansible fact file"
  ansible.builtin.stat:
    path: "/etc/ansible/facts.d/vault.fact"
  register: ansible_local_facts_vault_file

- name: "Vault Configuration | Writes Vault keys process"
  block:
    - ansible.builtin.set_fact:
        vault_init_facts: |
          {
            "vault_url": "{{ vault_install_http_scheme }}://{{ vault_install_http_ip }}:{{ vault_install_http_port }}",
            "vault_keys": "{{ vault_init_result.json.keys | default(vault_keys) }}",
            "vault_keys_base64": {{ vault_init_result.json.keys_base64 | default(vault_keys_base64) }},
          }

    - name: "Vault Configuration | Insert Vault Configuration facts in ansible local facts"
      ansible.builtin.copy:
        dest: /etc/ansible/facts.d/vault.fact
        content: "{{ vault_init_facts | to_nice_json }}"
        mode: "0600"

    - name: "Vault Configuration | Replace specials characters in fact"
      ansible.builtin.replace:
        path: /etc/ansible/facts.d/vault.fact
        after: "vault_keys_base64"
        before: "vault_root_token"
        regexp: "'"
        replace: '"'
  when: ansible_local_facts_vault_file.stat.exists == False

- name: "Vault Configuration | Reload local facts to configure Vault Configuration"
  ansible.builtin.setup:
    filter: ansible_local
