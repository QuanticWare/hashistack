- name: Unseal Vault
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    fqdn: "{{ fqdn }}"
    consul_backup_basename: "{% raw %}consul_{{ fqdn | replace('.', '_') }}_{{ ansible_date_time.date }}-{{ ansible_date_time.time | replace(':', '-') }}{% endraw %}"
    vault_backup_basename: "{% raw %}vault_{{ fqdn | replace('.', '_') }}_{{ ansible_date_time.date }}-{{ ansible_date_time.time | replace(':', '-') }}{% endraw %}"
    nomad_backup_basename: "{% raw %}nomad_{{ fqdn | replace('.', '_') }}_{{ ansible_date_time.date }}-{{ ansible_date_time.time | replace(':', '-') }}{% endraw %}"
  tasks:
    - name: "Hashistack | Backup | Create directory"
      ansible.builtin.file:
        path: "{% raw %}{{ item }}{% endraw %}"
        state: directory
        recurse: true
      loop:
      - "{{ datas_dir }}"
      - "{{ consul_conf_dir }}/backup"
      - "{{ vault_conf_dir }}/backup"
      - "{{ nomad_conf_dir }}/backup"

    - name: "Consul | Backup | Generate backup"
      ansible.builtin.shell: "consul snapshot save {% raw %}{{ consul_backup_basename }}{% endraw %}.snap"
      args:
        chdir: "{{ consul_conf_dir }}/backup"
      environment:
        CONSUL_HTTP_ADDR: "{{ consul_http_ip }}:{{ consul_http_port }}"
        CONSUL_HTTP_SSL: true
        CONSUL_HTTP_TOKEN: "{% raw %}{{ ansible_local.consul_global_management_token.consul_global_management_token }}{% endraw %}"
        CONSUL_CACERT: "{{ consul_operate_tls_host_certificate_dir }}/{{ consul_operate_tls_ca_pubkey }}"
        CONSUL_CLIENT_CERT: "{{ consul_operate_tls_host_certificate_dir }}/{{ consul_operate_tls_cert }}"
        CONSUL_CLIENT_KEY: "{{ consul_operate_tls_host_certificate_dir }}/{{ consul_operate_tls_privatekey }}"

    - name: "Consul | Backup | Find all backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.find:
        paths: "{{ consul_conf_dir }}/backup"
        age: "{{ hashistack_backup_retention }}"
        recurse: yes
      register: old_backup

    - name: "Consul | Backup | Remove backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.file:
        path: "{% raw %}{{ item.path }}{% endraw %}"
        state: absent
      loop: "{% raw %}{{ old_backup.files }}{% endraw %}"


{% if vault_consul_backend == true %}
    - name: "Vault | Backup | Generate backup for Consul backend"
      ansible.builtin.shell: "consul snapshot save {% raw %}{{ vault_backup_basename }}{% endraw %}.snap"
      args:
        chdir: "{{ vault_conf_dir }}/backup"
      environment:
        CONSUL_HTTP_ADDR: "{{ vault_consul_backend_http_ip }}:{{ vault_consul_backend_http_port }}"
        CONSUL_HTTP_SSL: true
        CONSUL_HTTP_TOKEN: "{% raw %}{{ ansible_local.consul_global_management_token.consul_global_management_token }}{% endraw %}"
        CONSUL_CACERT: "{{ consul_operate_tls_host_certificate_dir }}/{{ vault_consul_backend_tls_ca_pubkey }}"
        CONSUL_CLIENT_CERT: "{{ consul_operate_tls_host_certificate_dir }}/{{ vault_consul_backend_tls_cert }}"
        CONSUL_CLIENT_KEY: "{{ consul_operate_tls_host_certificate_dir }}/{{ vault_consul_backend_tls_privatekey }}"

    - name: "Vault | Backup | Find all backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.find:
        paths: "{{ vault_conf_dir }}/backup"
        age: "{{ hashistack_backup_retention }}"
        recurse: yes
      register: old_backup

    - name: "Vault | Backup | Remove backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.file:
        path: "{% raw %}{{ item.path }}{% endraw %}"
        state: absent
      loop: "{% raw %}{{ old_backup.files }}{% endraw %}"
{% else %}
    - name: "Vault | Backup | Generate backup"
      ansible.builtin.shell: "vault operator raft snapshot save {% raw %}{{ vault_backup_basename }}{% endraw %}.snap"
      args:
        chdir: "{{ vault_conf_dir }}/backup"
      environment:
        VAULT_ADDR: "{{ vault_http_scheme }}://{{ vault_http_ip }}:{{ vault_http_port }}"
        VAULT_TOKEN: "{{ vault_root_token }}"
        VAULT_CACERT: "{{ vault_operate_tls_host_certificate_dir }}/{{ vault_consul_backend_tls_ca_pubkey }}"
        VAULT_CLIENT_CERT: "{{ vault_operate_tls_host_certificate_dir }}/{{ vault_operate_tls_cert }}"
        VAULT_CLIENT_KEY: "{{ vault_operate_tls_host_certificate_dir }}/{{ vault_operate_tls_privatekey }}"

    - name: "Vault | Backup | Find all backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.find:
        paths: "{{ vault_conf_dir }}/backup"
        age: "{{ hashistack_backup_retention }}"
        recurse: yes
      register: old_backup

    - name: "Vault | Backup | Remove backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.file:
        path: "{% raw %}{{ item.path }}{% endraw %}"
        state: absent
      loop: "{% raw %}{{ old_backup.files }}{% endraw %}"
{% endif %}

    - name: "Nomad | Backup | Generate backup"
      ansible.builtin.shell: "nomad operator snapshot save {% raw %}{{ nomad_backup_basename }}{% endraw %}.snap"
      args:
        chdir: "{{ nomad_conf_dir }}/backup"
      environment:
        NOMAD_ADDR: "{{ nomad_http_scheme }}://{{ nomad_http_ip }}:{{ nomad_http_port }}"
        NOMAD_TOKEN: "{% raw %}{{ ansible_local.nomad_management_token.nomad_management_token }}{% endraw %}"
        NOMAD_CACERT: "{{ nomad_operate_tls_host_certificate_dir }}/{{ nomad_operate_tls_ca_pubkey }}"
        NOMAD_CLIENT_CERT: "{{ nomad_operate_tls_host_certificate_dir }}/{{ nomad_operate_tls_cert }}"
        NOMAD_CLIENT_KEY: "{{ nomad_operate_tls_host_certificate_dir }}/{{ nomad_operate_tls_privatekey }}"

    - name: "Nomad | Backup | Find all backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.find:
        paths: "{{ nomad_conf_dir }}/backup"
        age: "{{ hashistack_backup_retention }}"
        recurse: yes
      register: old_backup

    - name: "Nomad | Backup | Remove backups olders than {{ hashistack_backup_retention }} days"
      ansible.builtin.file:
        path: "{% raw %}{{ item.path }}{% endraw %}"
        state: absent
      loop: "{% raw %}{{ old_backup.files }}{% endraw %}"

    - name: "Hashistack | Backup | Copy conf directories"
      ansible.builtin.copy:
        src: "{% raw %}{{ item }}{% endraw %}"
        dest: "{{ datas_dir }}/etc"
        remote_src: yes
      loop:
      - "{{ consul_conf_dir }}"
      - "{{ vault_conf_dir }}"
      - "{{ nomad_conf_dir }}"

    - name: "Hashistack | Backup | Copy Hashistack definitions files"
      ansible.builtin.copy:
        src: "{{ hashistack_definitions_files_dir }}"
        dest: "{{ datas_dir }}/var/tmp"
