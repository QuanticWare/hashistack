- name: "Hashistack | Commons tasks | Install requiered OS packages"
  ansible.builtin.apt:
    update_cache: true
    pkg: ufw

- name: "Hashistack | Firewall | Open ports for SSH"
  community.general.ufw:
    rule: allow
    direction: in
    proto: "{{ item.proto }}"
    port: "{{ item.port }}"
  loop:
    - { proto: "tcp", port: "{{ ssh_port }}"}

- name: "Hashistack | Firewall | General configuration UFW"
  community.general.ufw:
    state: enabled
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: "outgoing", policy: "allow"}
    - { direction: "incoming", policy: "deny"}

- name: "Hashistack | Firewall | Open ports for HTTP/HTTPS on clients"
  community.general.ufw:
    rule: allow
    direction: in
    proto: "{{ item.proto }}"
    port: "{{ item.port }}"
  loop:
    - { proto: "tcp", port: "80"}
    - { proto: "tcp", port: "443"}
  when: nomad_node_role == 'client' or nomad_node_role == 'both'

- block:
    - name: "Hashistack | Firewall | Open ports for Consul Servers"
      community.general.ufw:
        rule: allow
        interface: "{{ consul_install_cluster_bridge }}"
        direction: "{{ item.direction }}"
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
      loop:
        - { proto: "tcp", port: "8600", direction: "in" }
        - { proto: "udp", port: "8600", direction: "in" }
        - { proto: "tcp", port: "8500", direction: "in" }
        - { proto: "tcp", port: "8501", direction: "in" }
        - { proto: "tcp", port: "8502", direction: "in" }
        - { proto: "tcp", port: "8503", direction: "in" }
        - { proto: "tcp", port: "8300", direction: "in" }
        - { proto: "tcp", port: "8300", direction: "out" }
        - { proto: "tcp", port: "8301", direction: "in" }
        - { proto: "tcp", port: "8301", direction: "out" }
        - { proto: "udp", port: "8301", direction: "in" }
        - { proto: "udp", port: "8301", direction: "out" }
      when: consul_node_role == 'server' or consul_node_role == 'both'

    - name: "Hashistack | Firewall | Open ports for Consul Clients"
      community.general.ufw:
        rule: allow
        interface: "{{ consul_install_cluster_bridge }}"
        direction: "{{ item.direction }}"
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
      loop:
        - { proto: "tcp", port: "8600", direction: "in" }
        - { proto: "udp", port: "8600", direction: "in" }
        - { proto: "tcp", port: "8500", direction: "in" }
        - { proto: "tcp", port: "8501", direction: "in" }
        - { proto: "tcp", port: "8502", direction: "in" }
        - { proto: "tcp", port: "8503", direction: "in" }
        - { proto: "tcp", port: "8301", direction: "in" }
        - { proto: "tcp", port: "8301", direction: "out" }
        - { proto: "udp", port: "8301", direction: "in" }
        - { proto: "udp", port: "8301", direction: "out" }
      when: consul_node_role == 'client'

    # Vault
    - name: "Hashistack | Firewall | Open ports for Vault Servers"
      community.general.ufw:
        rule: allow
        interface: "{{ vault_install_cluster_bridge }}"
        direction: "{{ item.direction }}"
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
      loop:
        - { proto: "tcp", port: "8200", direction: "in" }
        - { proto: "tcp", port: "8200", direction: "out" }
        - { proto: "tcp", port: "8201", direction: "in" }
        - { proto: "tcp", port: "8201", direction: "out" }
      when: vault_node_role == 'server'

    # Nomad
    - name: "Hashistack | Firewall | Open ports for Nomad Servers"
      community.general.ufw:
        rule: allow
        interface: "{{ nomad_install_cluster_bridge }}"
        direction: "{{ item.direction }}"
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
      loop:
        - { proto: "tcp", port: "4646", direction: "in" }
        - { proto: "tcp", port: "4646", direction: "out" }
        - { proto: "tcp", port: "4647", direction: "in" }
        - { proto: "tcp", port: "4647", direction: "out" }
        - { proto: "tcp", port: "4648", direction: "in" }
        - { proto: "tcp", port: "4648", direction: "out" }
        - { proto: "udp", port: "4648", direction: "in" }
        - { proto: "udp", port: "4648", direction: "out" }
      when: nomad_node_role == 'server'

    - name: "Hashistack | Firewall | Open ports for Nomad Clients"
      community.general.ufw:
        rule: allow
        interface: "{{ nomad_install_cluster_bridge }}"
        direction: "{{ item.direction }}"
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
      loop:
        - { proto: "tcp", port: "4646", direction: "in" }
        - { proto: "tcp", port: "4646", direction: "out" }
        - { proto: "tcp", port: "4647", direction: "in" }
        - { proto: "tcp", port: "4647", direction: "out" }
        - { proto: "tcp", port: "20000:32000", direction: "in" }
        - { proto: "tcp", port: "20000:32000", direction: "out" }
        - { proto: "udp", port: "20000:32000", direction: "in" }
        - { proto: "udp", port: "20000:32000", direction: "out" }
      when: nomad_node_role == 'client'
  when: hashistack_install_mode == 'cluster'

- name: "Hashistack | Firewall | Allow in and out on interface docker0"
  community.general.ufw:
    rule: allow
    interface: docker0
    direction: "{{ item }}"
  loop:
    - in
    - out
  when: nomad_node_role == 'client' or nomad_node_role == 'both'

- name: "Hashistack | Firewall | Allow in and out on interface nomad"
  community.general.ufw:
    rule: allow
    interface: nomad
    direction: "{{ item }}"
  loop:
    - in
    - out
  when: nomad_node_role == 'client' or nomad_node_role == 'both'

- name: "Hashistack | Firewall | Enable UFW"
  community.general.ufw:
    state: enabled
