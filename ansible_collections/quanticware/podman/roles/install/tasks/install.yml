---
- name: Podman | Install requiered packages
  apt:
    name: "{{ item }}"
    update_cache: yes
  loop:
  - curl
  - wget
  - btrfs-progs
  - git
  - go-md2man
  - iptables
  - libassuan-dev
  - libbtrfs-dev
  - libc6-dev
  - libdevmapper-dev
  - libglib2.0-dev
  - libgpgme-dev
  - libgpg-error-dev
  - libprotobuf-dev
  - libprotobuf-c-dev
  - libseccomp-dev
  - libselinux1-dev
  - libsystemd-dev
  - pkg-config
  - make
  - libapparmor-dev
  - gcc
  - cmake
  - uidmap
  - libostree-dev
  - slirp4netns
  - dbus-user-session
  - systemd-container
  - fuse-overlayfs
  - acl

- name: Podman | Ensure br_netfilter is enabled.
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Podman | Check if go already installed
  ansible.builtin.stat:
    path: /usr/local/go/bin/go
  register: go_installed

- name: Podman | Install Go
  ansible.builtin.import_role:
    name: quanticware.go.install
  when: go_installed.stat.exists == false

- name: Podman | Git clone conmon
  ansible.builtin.git:
    repo: 'https://github.com/containers/conmon'
    dest: "/tmp/conmon"

- name: Podman | Make
  community.general.make:
    chdir: "/tmp/conmon"
    target: all
    params:
      GOCACHE: "$(mktemp -d)"

- name: Podman | Make
  community.general.make:
    chdir: "/tmp/conmon"
    params:
      GOCACHE: "$(mktemp -d)"

- name: Podman | Make Podman
  community.general.make:
    chdir: "/tmp/conmon"
    target: podman
    params:
      GOCACHE: "$(mktemp -d)"

- name: Podman | Cleaning conmon sources files
  ansible.builtin.file:
    state: absent
    path: "/tmp/conmon"

- name: Podman | Check if runC already installed
  ansible.builtin.stat:
    path: /usr/bin/runc
  register: runc_installed

- name: Podman | Install runC
  ansible.builtin.import_role:
    name: quanticware.runc.install
  when: runc_installed.stat.exists == false

- name: Podman | Install CNI plugin
  ansible.builtin.import_role:
    name: quanticware.cni.install

- name: Podman | Create cni conf directory
  file:
    path: "/etc/cni/net.d"
    state: directory
    mode: '0755'
    owner: "{{ role_user }}"
    group: "{{ role_user }}"
    recurse: yes

- name: Podman | Download podman-bridge.conf to loopback.conf
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/containers/libpod/master/cni/87-podman-bridge.conflist"
    dest: "/etc/cni/net.d/99-loopback.conf"
    mode: '0755'
    owner: "{{ role_user }}"
    group: "{{ role_user }}"

- name: Podman | Retreive GitHub latest version
  uri:
    url: https://api.github.com/repos/containers/podman/releases/latest
    body_format: json
  register: tag

- name: Podman | Unarchive Podman
  ansible.builtin.unarchive:
    src: "https://github.com/containers/podman/archive/refs/tags/{{ tag.json.tag_name  }}.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Podman | Make
  ansible.builtin.command: make
  args:
    chdir: "/tmp/podman-{{ tag.json.tag_name | replace('v','') }}"
  environment:
    BUILDTAGS: "{{ podman_buildtags }}"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/go/bin:/usr/local/go/bin"

- name: Podman | Make install
  ansible.builtin.command: make install
  args:
    chdir: "/tmp/podman-{{ tag.json.tag_name | replace('v','') }}"
  environment:
    BUILDTAGS: "{{ podman_buildtags }}"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/go/bin:/usr/local/go/bin"

- name: Podman | Cleaning podman sources files
  ansible.builtin.file:
    state: absent
    path: "/tmp/podman-{{ tag.json.tag_name | replace('v','') }}"
